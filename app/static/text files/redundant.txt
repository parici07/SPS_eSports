"""@app.route('/analysis')
@login_required
def analysis():
    platforms = []
    for game in Games.query.all():
        if game.platform not in platforms:
            platforms.append(game.platform)
    print(platforms)
    return redirect(url_for('index'))"""


"""@app.route('/database', methods=['GET', 'POST'])
@login_required
def database():
    with open('vgsales.csv', 'r') as csvfile:
        tbl_reader = csv.reader(csvfile, delimiter=',')
        next(csvfile)
        id = 1
        for row in tbl_reader:
            game = Games(game_id=id, game_title=row[1], platform=row[2], year=row[3], genre=row[4],
                         publisher=row[5], global_sales=row[10], sales_ranking=row[0])
            db.session.add(game)
            db.session.commit()
            id += 1

    return redirect(url_for('index'))"""

"""def convert_bools():
    text = open('video_games.csv', 'r')
    text = ''.join([i for i in text])

    text = text.replace('True', int('1'))
    text = text.replace('False', int('0'))

    x = open('output2.csv', 'w')
    x.writelines(text)
    x.close()


    return redirect(url_for('index'))"""



"""def check_data():
    for game in Games.query.all():
        # check if any null values
        if game.game_title == None:
            print(game)
            print('Game title is null')
        if game.platform == None:
            print(game)
            print('Platform is null')
        if game.year == None:
            print(game)
            print('Year is null')
        if game.genre == None:
            print(game)
            print('Genre is null')
        if game.publisher == None:
            print(game)
            print('Publisher is null')
        if game.global_sales == None:
            print(game)
            print('Global sales is null')
        if game.sales_ranking == None:
            print(game)
            print('Sales ranking is null')
    print("Done checking data integrity")
    return redirect(url_for('index'))"""